{"version":3,"sources":["httpClient.jsx","components/Login.jsx","components/Admin.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["httpClient","axios","create","isConnected","token","localStorage","getItem","defaults","headers","common","logIn","credentials","this","method","url","data","then","serverResponse","setItem","success","error","removeItem","catch","err","getClients","saveClient","client","getUsers","saveUser","user","Login","state","username","password","handleChangeUsername","e","setState","target","value","handleChangePassword","onFormSubmit","evt","preventDefault","redirect","props","onSuccessLogin","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Form","onSubmit","bind","size","Segment","Message","negative","Input","fluid","icon","iconPosition","placeholder","onChange","type","Button","React","Component","Admin","clients","clientName","clientSecret","addressIP","users","clientEdited","userEdited","componentDidMount","res","handleAddClient","console","log","handleEditClient","handleDeleteClient","handleSaveClient","handleAddUser","handleEditUser","handleDeleteUser","handleSaveUser","panes","menuItem","render","Tab","Pane","Table","celled","selectable","Header","HeaderCell","Body","Row","Cell","onClick","map","index","App","connected","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd5a106.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst httpClient = axios.create()\n\nhttpClient.isConnected = function() {\n    const token = localStorage.getItem('MySSO_token')\n    httpClient.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    return httpClient.logIn()\n}\n\nhttpClient.logIn = function(credentials) {\n\treturn this({ method: 'post', url: `/login`, data: credentials })\n\t\t.then((serverResponse) => {\n\t\t    const token = serverResponse.data.token\n\t\t\tif (token) {\n\t\t\t    localStorage.setItem('MySSO_token', token)\n\t\t\t    httpClient.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\t\t\t\treturn {\n                    success: true,\n                    error: null\n                }\n\t\t\t} else {\n                localStorage.removeItem('MySSO_token')\n\t\t\t\treturn {\n                    success: false,\n\t\t\t\t    error: 'Authentification failed'\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n            localStorage.removeItem('MySSO_token')\n            return {\n                success: false,\n                error: 'Authentification failed'\n            }\n\t\t})\n}\n\nhttpClient.getClients = function() {\n    return this({ method: 'get', url: `/admin/clients` })\n        .then((serverResponse) => {\n            return serverResponse.data\n        })\n}\n\nhttpClient.saveClient = function(client) {\n    return this({ method: 'put', url: `/admin/clients`, data: client })\n        .then((serverResponse) => {\n            return serverResponse.data\n        })\n}\n\nhttpClient.getUsers = function() {\n    return this({ method: 'get', url: `/admin/users` })\n        .then((serverResponse) => {\n            return serverResponse.data\n        })\n}\n\nhttpClient.saveUser = function(user) {\n    return this({ method: 'put', url: `/admin/users`, data: user })\n        .then((serverResponse) => {\n            return serverResponse.data\n        })\n}\n\nexport default httpClient\n","import React from 'react'\nimport { Button, Form, Grid, Message, Segment } from 'semantic-ui-react'\nimport httpClient from '../httpClient'\n\nexport default class Login extends React.Component {\n    state = { error: null, username: '', password: ''}\n    handleChangeUsername = (e) => {\n        this.setState({ username: e.target.value })\n    }\n    handleChangePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\tonFormSubmit = (evt) => {\n\t\tevt.preventDefault()\n\t\tconst redirect = this.props.redirect\n\t\tconst { username, password } = this.state\n\t\thttpClient.logIn({\n\t\t    username: username,\n\t\t    password: password,\n\t\t    redirect: redirect\n\t\t}).then(data => {\n\t\t\tthis.setState({ error: null, username: '', password: '' })\n\t\t\tif (data.success) {\n                this.props.onSuccessLogin()\n\t\t\t} else {\n                this.setState({ error: data.message })\n            }\n\t\t})\n\t}\n\trender() {\n\t\tconst { error, username, password } = this.state\n\t\treturn (\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                <Grid.Column style={{ maxWidth: 350 }}>\n                    <Form onSubmit={this.onFormSubmit.bind(this)} size='large'>\n                        <Segment>\n                            { error ? <Message negative>{error}</Message> : null }\n                            <Form.Input fluid icon='user' iconPosition='left' placeholder='Username' value={username} onChange={this.handleChangeUsername} />\n                            <Form.Input fluid icon='lock' iconPosition='left' placeholder='Password' type='password' value={password} onChange={this.handleChangePassword} />\n                            <Button type=\"submit\">Login</Button>\n                        </Segment>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { Button, Grid, Input, Message, Tab, Table } from 'semantic-ui-react'\nimport httpClient from '../httpClient'\n\nexport default class Admin extends React.Component {\n    state = { \n        clients: [],\n        clientName: '',\n        clientSecret: '',\n        addressIP: '',\n        users: [],\n        username: '',\n        password: '',\n        clientEdited: null,\n        userEdited: null\n    }\n    componentDidMount = () => {\n        httpClient.getClients().then(res => this.setState({ clients : res }))\n        httpClient.getUsers().then(res => this.setState({ users : res }))\n    }\n    handleAddClient = () => {\n        const { clientName, clientSecret, addressIP } = this.state\n        httpClient.saveClient({\n            clientName: clientName,\n            clientSecret: clientSecret,\n            addressIP: addressIP\n        }).then(res => console.log(res))\n    }\n    handleEditClient = (client) => {\n        this.setState({ clientEdited: client })\n    }\n    handleDeleteClient = (client) => {\n        console.log('TODO delete client')\n    }\n    handleSaveClient = () => {\n        const { clientEdited } = this.state\n        httpClient.saveClient(clientEdited).then(res => console.log(res))\n        this.setState({ clientEdited: null })\n    }\n    handleAddUser = () => {\n        const { username, password } = this.state\n        httpClient.saveUser({\n            username: username,\n            password: password\n        }).then(res => console.log(res))\n    }\n    handleEditUser = (user) => {\n        this.setState({ userEdited: user })\n    }\n    handleDeleteUser = (user) => {\n        console.log('TODO delete user')\n    }\n    handleSaveUser = () => {\n        const { userEdited } = this.state\n        httpClient.saveUser(userEdited).then(res => console.log(res))\n        this.setState({ userEdited: null })\n    }\n\trender() {\n        const { clients, clientName, clientSecret, addressIP, users, username, password, clientEdited, userEdited } = this.state\n        const panes = [\n            {\n                menuItem: 'Clients',\n                render: () => (\n                    <Tab.Pane>\n                        <Table celled selectable>\n                            <Table.Header>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Secret</Table.HeaderCell>\n                                <Table.HeaderCell>Address</Table.HeaderCell>\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\n                            </Table.Header>\n                            <Table.Body>\n                                <Table.Row>\n                                    <Table.Cell><Input type='text' value={clientName} placeholder='Client name' /></Table.Cell>\n                                    <Table.Cell><Input type='password' value={clientSecret} placeholder='Client secret' /></Table.Cell>\n                                    <Table.Cell><Input type='text' value={addressIP} placeholder='0.0.0.0' /></Table.Cell>\n                                    <Table.Cell>\n                                        <Button icon='add' onClick={this.handleAddClient} />\n                                    </Table.Cell>\n                                </Table.Row>\n                                {clients.map((client, index) => {\n                                    if (clientEdited) {\n                                        return (\n                                            <Table.Row key={index}>\n                                                <Table.Cell><Input type='text' value={clientEdited.clientName} placeholder='Client name' /></Table.Cell>\n                                                <Table.Cell><Input type='password' value={clientEdited.clientSecret} placeholder='Client secret' /></Table.Cell>\n                                                <Table.Cell><Input type='text' value={clientEdited.addressIP} placeholder='0.0.0.0' /></Table.Cell>\n                                                <Table.Cell>\n                                                    <Button icon='save' onClick={this.handleSaveClient} />\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    } else {\n                                        return (\n                                            <Table.Row key={index}>\n                                                <Table.Cell>{client.clientName}</Table.Cell>\n                                                <Table.Cell>********</Table.Cell>\n                                                <Table.Cell>{client.addressIP}</Table.Cell>\n                                                <Table.Cell>\n                                                    <Button icon='edit' onClick={() => this.handleEditClient(client)} />\n                                                    <Button icon='delete' onClick={() => this.handleDeleteClient(client)} />\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    }\n                                })}\n                            </Table.Body>\n                        </Table>\n                    </Tab.Pane>\n                )\n            },\n            {\n                menuItem: 'Users',\n                render: () => (\n                    <Tab.Pane>\n                        <Table celled selectable>\n                            <Table.Header>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Password</Table.HeaderCell>\n                                <Table.HeaderCell>Clients</Table.HeaderCell>\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\n                            </Table.Header>\n                            <Table.Body>\n                                <Table.Row>\n                                    <Table.Cell><Input type='text' value={username} placeholder='User name' /></Table.Cell>\n                                    <Table.Cell><Input type='password' value={password} placeholder='User password' /></Table.Cell>\n                                    <Table.Cell>TODO Clients</Table.Cell>\n                                    <Table.Cell>\n                                        <Button icon='add' onClick={this.handleAddUser} />\n                                    </Table.Cell>\n                                </Table.Row>\n                                {users.map((user, index) => {\n                                    if (userEdited) {\n                                        return (\n                                            <Table.Row key={index}>\n                                                <Table.Cell><Input type='text' value={userEdited.username} placeholder='User name' /></Table.Cell>\n                                                <Table.Cell><Input type='password' value={userEdited.password} placeholder='User password' /></Table.Cell>\n                                                <Table.Cell>TODO Clients</Table.Cell>\n                                                <Table.Cell>\n                                                    <Button icon='save' onClick={this.handleSaveUser} />\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    } else {\n                                        return (\n                                            <Table.Row key={index}>\n                                                <Table.Cell>{user.username}</Table.Cell>\n                                                <Table.Cell>********</Table.Cell>\n                                                <Table.Cell>TODO Clients</Table.Cell>\n                                                <Table.Cell>\n                                                    <Button icon='edit' onClick={() => this.handleEditUser(user)} />\n                                                    <Button icon='delete' onClick={() => this.handleDeleteUser(user)} />\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    }\n                                })}\n                            </Table.Body>\n                        </Table>\n                    </Tab.Pane>\n                )\n            }\n        ]\n        return (\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='top'>\n                <Grid.Column>\n                    <Tab panes={panes} />\n                </Grid.Column>\n            </Grid>\n        )\n\t}\n}\n","import './App.css'\n\nimport React, { Component } from 'react'\nimport Login from './components/Login'\nimport Admin from './components/Admin'\nimport httpClient from './httpClient'\n\nexport default class App extends Component {\n    state = {\n        connected : false\n    }\n    componentDidMount = () => {\n        httpClient.isConnected().then(data => this.setState({ connected: data.success }))\n    }\n    onSuccessLogin = () => {\n        this.setState({ connected : true })\n    }\n    render() {\n        const { connected } = this.state\n        return (\n            <div className='App'>\n                { connected ? <Admin /> : <Login onSuccessLogin={this.onSuccessLogin} /> }\n            </div>\n        )\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}